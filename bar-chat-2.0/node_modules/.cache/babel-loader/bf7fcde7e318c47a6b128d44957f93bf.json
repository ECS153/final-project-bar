{"ast":null,"code":"import _toConsumableArray from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport Bar from '../abis/Bar.json';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      bar: null,\n      msgCount: 0,\n      messages: [],\n      loading: true\n    };\n    _this.createMessage = _this.createMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadBlockchainData = _this.loadBlockchainData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setState = _this.setState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkID, networkData, bar, msgCount, i, message;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // load contract\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkID = _context3.sent;\n                console.log(networkID);\n                networkData = Bar.networks[networkID];\n                console.log(networkData);\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                bar = web3.eth.Contract(Bar.abi, networkData.address);\n                this.setState({\n                  bar: bar\n                });\n                _context3.next = 16;\n                return bar.methods.messageCount().call();\n\n              case 16:\n                msgCount = _context3.sent;\n                // doesn't cost gas; .send() costs gas\n                this.setState({\n                  msgCount: msgCount\n                }); // Load messages\n\n                i = 1;\n\n              case 19:\n                if (!(i <= msgCount)) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                _context3.next = 22;\n                return bar.methods.messages(i).call();\n\n              case 22:\n                message = _context3.sent;\n                this.setState({\n                  messages: [].concat(_toConsumableArray(this.state.messages), [message]) // Create a new array and appends new message\n\n                });\n\n              case 24:\n                i++;\n                _context3.next = 19;\n                break;\n\n              case 27:\n                this.setState({\n                  loading: false\n                });\n                console.log({\n                  messages: this.state.messages\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert('Bar contract not deployed to the detected network.');\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"createMessage\",\n    value: function createMessage(content) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.bar.methods.createMessage(content).send({\n        from: this.state.account\n      }).once(\"confirmation\", function (confirmation, receipt) {\n        console.log(\"loading\");\n\n        _this2.setState({\n          loading: false\n        });\n\n        window.location.reload(true);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 59\n        }\n      }, \"Loading...\")) : /*#__PURE__*/React.createElement(Main, {\n        messages: this.state.messages,\n        createMessage: this.createMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-2.0/src/components/App.js"],"names":["React","Component","Identicon","Bar","Web3","Navbar","Main","App","props","state","account","bar","msgCount","messages","loading","createMessage","bind","loadBlockchainData","setState","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkID","console","log","networkData","networks","Contract","abi","address","methods","messageCount","call","i","message","content","send","from","once","confirmation","receipt","location","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport Bar from '../abis/Bar.json'\nimport Web3 from 'web3';\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      bar: null,\n      msgCount: 0,\n      messages: [],\n      loading: true\n    }\n\n    this.createMessage = this.createMessage.bind(this)\n    this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    this.setState = this.setState.bind(this)\n  }\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    // load contract\n    const networkID = await web3.eth.net.getId()\n    console.log(networkID)\n    const networkData = Bar.networks[networkID]\n    console.log(networkData)\n    if(networkData) {\n      const bar = web3.eth.Contract(Bar.abi, networkData.address)\n      this.setState({ bar })\n      const msgCount = await bar.methods.messageCount().call() // doesn't cost gas; .send() costs gas\n      this.setState({ msgCount })\n      \n      // Load messages\n      for (var i = 1; i <= msgCount; i++) {\n        const message = await bar.methods.messages(i).call()\n        this.setState({\n          messages: [...this.state.messages, message] // Create a new array and appends new message\n        })\n      }\n      this.setState({ loading: false})\n      console.log({ messages: this.state.messages })\n    } else {\n      window.alert('Bar contract not deployed to the detected network.')\n    }\n  }\n  \n  createMessage(content) {\n    this.setState({ loading: true })\n    this.state.bar.methods.createMessage(content).send({ from: this.state.account })\n      .once(\"confirmation\",(confirmation, receipt) => {\n        console.log(\"loading\");\n        this.setState({ loading: false })\n        window.location.reload(true);\n      })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading \n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main \n              messages={this.state.messages}\n              createMessage={this.createMessage} \n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}