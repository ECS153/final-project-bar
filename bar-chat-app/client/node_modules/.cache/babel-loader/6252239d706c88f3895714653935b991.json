{"ast":null,"code":"var ethJSABI = require(\"ethjs-abi\");\n\nvar BlockchainUtils = require(\"truffle-blockchain-utils\");\n\nvar Web3 = require(\"web3\");\n\nvar StatusError = require(\"./statuserror.js\"); // For browserified version. If browserify gave us an empty version,\n// look for the one provided by the user.\n\n\nif (typeof Web3 == \"object\" && Object.keys(Web3).length == 0) {\n  Web3 = global.Web3;\n}\n\nvar contract = function (module) {\n  // Planned for future features, logging, etc.\n  function Provider(provider) {\n    this.provider = provider;\n  }\n\n  Provider.prototype.send = function () {\n    return this.provider.send.apply(this.provider, arguments);\n  };\n\n  Provider.prototype.sendAsync = function () {\n    return this.provider.sendAsync.apply(this.provider, arguments);\n  };\n\n  var BigNumber = new Web3().toBigNumber(0).constructor;\n  var Utils = {\n    is_object: function (val) {\n      return typeof val == \"object\" && !Array.isArray(val);\n    },\n    is_big_number: function (val) {\n      if (typeof val != \"object\") return false; // Instanceof won't work because we have multiple versions of Web3.\n\n      try {\n        new BigNumber(val);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    decodeLogs: function (C, instance, logs) {\n      return logs.map(function (log) {\n        var logABI = C.events[log.topics[0]];\n\n        if (logABI == null) {\n          return null;\n        } // This function has been adapted from web3's SolidityEvent.decode() method,\n        // and built to work with ethjs-abi.\n\n\n        var copy = Utils.merge({}, log);\n\n        function partialABI(fullABI, indexed) {\n          var inputs = fullABI.inputs.filter(function (i) {\n            return i.indexed === indexed;\n          });\n          var partial = {\n            inputs: inputs,\n            name: fullABI.name,\n            type: fullABI.type,\n            anonymous: fullABI.anonymous\n          };\n          return partial;\n        }\n\n        var argTopics = logABI.anonymous ? copy.topics : copy.topics.slice(1);\n        var indexedData = \"0x\" + argTopics.map(function (topics) {\n          return topics.slice(2);\n        }).join(\"\");\n        var indexedParams = ethJSABI.decodeEvent(partialABI(logABI, true), indexedData);\n        var notIndexedData = copy.data;\n        var notIndexedParams = ethJSABI.decodeEvent(partialABI(logABI, false), notIndexedData);\n        copy.event = logABI.name;\n        copy.args = logABI.inputs.reduce(function (acc, current) {\n          var val = indexedParams[current.name];\n\n          if (val === undefined) {\n            val = notIndexedParams[current.name];\n          }\n\n          acc[current.name] = val;\n          return acc;\n        }, {});\n        Object.keys(copy.args).forEach(function (key) {\n          var val = copy.args[key]; // We have BN. Convert it to BigNumber\n\n          if (val.constructor.isBN) {\n            copy.args[key] = C.web3.toBigNumber(\"0x\" + val.toString(16));\n          }\n        });\n        delete copy.data;\n        delete copy.topics;\n        return copy;\n      }).filter(function (log) {\n        return log != null;\n      });\n    },\n    promisifyFunction: function (fn, C) {\n      var self = this;\n      return function () {\n        var instance = this;\n        var args = Array.prototype.slice.call(arguments);\n        var tx_params = {};\n        var last_arg = args[args.length - 1]; // It's only tx_params if it's an object and not a BigNumber.\n\n        if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {\n          tx_params = args.pop();\n        }\n\n        tx_params = Utils.merge(C.class_defaults, tx_params);\n        return C.detectNetwork().then(function () {\n          return new Promise(function (accept, reject) {\n            var callback = function (error, result) {\n              if (error != null) {\n                reject(error);\n              } else {\n                accept(result);\n              }\n            };\n\n            args.push(tx_params, callback);\n            fn.apply(instance.contract, args);\n          });\n        });\n      };\n    },\n    synchronizeFunction: function (fn, instance, C) {\n      var self = this;\n      return function () {\n        var args = Array.prototype.slice.call(arguments);\n        var tx_params = {};\n        var last_arg = args[args.length - 1]; // It's only tx_params if it's an object and not a BigNumber.\n\n        if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {\n          tx_params = args.pop();\n        }\n\n        tx_params = Utils.merge(C.class_defaults, tx_params);\n        return C.detectNetwork().then(function () {\n          return new Promise(function (accept, reject) {\n            var callback = function (error, tx) {\n              if (error != null) {\n                reject(error);\n                return;\n              }\n\n              var timeout;\n\n              if (C.synchronization_timeout === 0 || C.synchronization_timeout !== undefined) {\n                timeout = C.synchronization_timeout;\n              } else {\n                timeout = 240000;\n              }\n\n              var start = new Date().getTime();\n\n              var make_attempt = function () {\n                C.web3.eth.getTransactionReceipt(tx, function (err, receipt) {\n                  if (err && !err.toString().includes('unknown transaction')) {\n                    return reject(err);\n                  } // Reject on transaction failures, accept otherwise\n                  // Handles \"0x00\" or hex 0\n\n\n                  if (receipt != null) {\n                    if (parseInt(receipt.status, 16) == 0) {\n                      var statusError = new StatusError(tx_params, tx, receipt);\n                      return reject(statusError);\n                    } else {\n                      return accept({\n                        tx: tx,\n                        receipt: receipt,\n                        logs: Utils.decodeLogs(C, instance, receipt.logs)\n                      });\n                    }\n                  }\n\n                  if (timeout > 0 && new Date().getTime() - start > timeout) {\n                    return reject(new Error(\"Transaction \" + tx + \" wasn't processed in \" + timeout / 1000 + \" seconds!\"));\n                  }\n\n                  setTimeout(make_attempt, 1000);\n                });\n              };\n\n              make_attempt();\n            };\n\n            args.push(tx_params, callback);\n            fn.apply(self, args);\n          });\n        });\n      };\n    },\n    merge: function () {\n      var merged = {};\n      var args = Array.prototype.slice.call(arguments);\n\n      for (var i = 0; i < args.length; i++) {\n        var object = args[i];\n        var keys = Object.keys(object);\n\n        for (var j = 0; j < keys.length; j++) {\n          var key = keys[j];\n          var value = object[key];\n          merged[key] = value;\n        }\n      }\n\n      return merged;\n    },\n    parallel: function (arr, callback) {\n      callback = callback || function () {};\n\n      if (!arr.length) {\n        return callback(null, []);\n      }\n\n      var index = 0;\n      var results = new Array(arr.length);\n      arr.forEach(function (fn, position) {\n        fn(function (err, result) {\n          if (err) {\n            callback(err);\n\n            callback = function () {};\n          } else {\n            index++;\n            results[position] = result;\n\n            if (index >= arr.length) {\n              callback(null, results);\n            }\n          }\n        });\n      });\n    },\n    bootstrap: function (fn) {\n      // Add our static methods\n      Object.keys(fn._static_methods).forEach(function (key) {\n        fn[key] = fn._static_methods[key].bind(fn);\n      }); // Add our properties.\n\n      Object.keys(fn._properties).forEach(function (key) {\n        fn.addProp(key, fn._properties[key]);\n      });\n      return fn;\n    },\n    linkBytecode: function (bytecode, links) {\n      Object.keys(links).forEach(function (library_name) {\n        var library_address = links[library_name];\n        var regex = new RegExp(\"__\" + library_name + \"_+\", \"g\");\n        bytecode = bytecode.replace(regex, library_address.replace(\"0x\", \"\"));\n      });\n      return bytecode;\n    }\n  }; // Accepts a contract object created with web3.eth.contract.\n  // Optionally, if called without `new`, accepts a network_id and will\n  // create a new version of the contract abstraction with that network_id set.\n\n  function Contract(contract) {\n    var self = this;\n    var constructor = this.constructor;\n    this.abi = constructor.abi;\n\n    if (typeof contract == \"string\") {\n      var address = contract;\n      var contract_class = constructor.web3.eth.contract(this.abi);\n      contract = contract_class.at(address);\n    }\n\n    this.contract = contract; // Provision our functions.\n\n    for (var i = 0; i < this.abi.length; i++) {\n      var item = this.abi[i];\n\n      if (item.type == \"function\") {\n        if (item.constant == true) {\n          this[item.name] = Utils.promisifyFunction(contract[item.name], constructor);\n        } else {\n          this[item.name] = Utils.synchronizeFunction(contract[item.name], this, constructor);\n        }\n\n        this[item.name].call = Utils.promisifyFunction(contract[item.name].call, constructor);\n        this[item.name].sendTransaction = Utils.promisifyFunction(contract[item.name].sendTransaction, constructor);\n        this[item.name].request = contract[item.name].request;\n        this[item.name].estimateGas = Utils.promisifyFunction(contract[item.name].estimateGas, constructor);\n      }\n\n      if (item.type == \"event\") {\n        this[item.name] = contract[item.name];\n      }\n    }\n\n    this.sendTransaction = Utils.synchronizeFunction(function (tx_params, callback) {\n      if (typeof tx_params == \"function\") {\n        callback = tx_params;\n        tx_params = {};\n      }\n\n      tx_params.to = self.address;\n      constructor.web3.eth.sendTransaction.apply(constructor.web3.eth, [tx_params, callback]);\n    }, this, constructor);\n\n    this.send = function (value) {\n      return self.sendTransaction({\n        value: value\n      });\n    };\n\n    this.allEvents = contract.allEvents;\n    this.address = contract.address;\n    this.transactionHash = contract.transactionHash;\n  }\n\n  ;\n  Contract._static_methods = {\n    setProvider: function (provider) {\n      if (!provider) {\n        throw new Error(\"Invalid provider passed to setProvider(); provider is \" + provider);\n      }\n\n      var wrapped = new Provider(provider);\n      this.web3.setProvider(wrapped);\n      this.currentProvider = provider;\n    },\n    new: function () {\n      var self = this;\n\n      if (this.currentProvider == null) {\n        throw new Error(this.contractName + \" error: Please call setProvider() first before calling new().\");\n      }\n\n      var args = Array.prototype.slice.call(arguments);\n\n      if (!this.bytecode) {\n        throw new Error(this._json.contractName + \" error: contract binary not set. Can't deploy new instance.\");\n      }\n\n      return self.detectNetwork().then(function (network_id) {\n        // After the network is set, check to make sure everything's ship shape.\n        var regex = /__[^_]+_+/g;\n        var unlinked_libraries = self.binary.match(regex);\n\n        if (unlinked_libraries != null) {\n          unlinked_libraries = unlinked_libraries.map(function (name) {\n            // Remove underscores\n            return name.replace(/_/g, \"\");\n          }).sort().filter(function (name, index, arr) {\n            // Remove duplicates\n            if (index + 1 >= arr.length) {\n              return true;\n            }\n\n            return name != arr[index + 1];\n          }).join(\", \");\n          throw new Error(self.contractName + \" contains unresolved libraries. You must deploy and link the following libraries before you can deploy a new version of \" + self._json.contractName + \": \" + unlinked_libraries);\n        }\n      }).then(function () {\n        return new Promise(function (accept, reject) {\n          var contract_class = self.web3.eth.contract(self.abi);\n          var tx_params = {};\n          var last_arg = args[args.length - 1]; // It's only tx_params if it's an object and not a BigNumber.\n\n          if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {\n            tx_params = args.pop();\n          } // Validate constructor args\n\n\n          var constructor = self.abi.filter(function (item) {\n            return item.type === 'constructor';\n          });\n\n          if (constructor.length && constructor[0].inputs.length !== args.length) {\n            throw new Error(self.contractName + \" contract constructor expected \" + constructor[0].inputs.length + \" arguments, received \" + args.length);\n          }\n\n          tx_params = Utils.merge(self.class_defaults, tx_params);\n\n          if (tx_params.data == null) {\n            tx_params.data = self.binary;\n          } // web3 0.9.0 and above calls new this callback twice.\n          // Why, I have no idea...\n\n\n          var intermediary = function (err, web3_instance) {\n            if (err != null) {\n              reject(err);\n              return;\n            }\n\n            if (err == null && web3_instance != null && web3_instance.address != null) {\n              accept(new self(web3_instance));\n            }\n          };\n\n          args.push(tx_params, intermediary);\n          contract_class.new.apply(contract_class, args);\n        });\n      });\n    },\n    at: function (address) {\n      var self = this;\n\n      if (address == null || typeof address != \"string\" || address.length != 42) {\n        throw new Error(\"Invalid address passed to \" + this._json.contractName + \".at(): \" + address);\n      }\n\n      var contract = new this(address); // Add thennable to allow people opt into new recommended usage.\n\n      contract.then = function (fn) {\n        return self.detectNetwork().then(function (network_id) {\n          var instance = new self(address);\n          return new Promise(function (accept, reject) {\n            self.web3.eth.getCode(address, function (err, code) {\n              if (err) return reject(err);\n\n              if (!code || code.replace(\"0x\", \"\").replace(/0/g, \"\") === '') {\n                return reject(new Error(\"Cannot create instance of \" + self.contractName + \"; no code at address \" + address));\n              }\n\n              accept(instance);\n            });\n          });\n        }).then(fn);\n      };\n\n      return contract;\n    },\n    deployed: function () {\n      var self = this;\n      return self.detectNetwork().then(function () {\n        // We don't have a network config for the one we found\n        if (self._json.networks[self.network_id] == null) {\n          throw new Error(self.contractName + \" has not been deployed to detected network (network/artifact mismatch)\");\n        } // If we found the network but it's not deployed\n\n\n        if (!self.isDeployed()) {\n          throw new Error(self.contractName + \" has not been deployed to detected network (\" + self.network_id + \")\");\n        }\n\n        return new self(self.address);\n      });\n    },\n    defaults: function (class_defaults) {\n      if (this.class_defaults == null) {\n        this.class_defaults = {};\n      }\n\n      if (class_defaults == null) {\n        class_defaults = {};\n      }\n\n      var self = this;\n      Object.keys(class_defaults).forEach(function (key) {\n        var value = class_defaults[key];\n        self.class_defaults[key] = value;\n      });\n      return this.class_defaults;\n    },\n    hasNetwork: function (network_id) {\n      return this._json.networks[network_id + \"\"] != null;\n    },\n    isDeployed: function () {\n      if (this.network_id == null) {\n        return false;\n      }\n\n      if (this._json.networks[this.network_id] == null) {\n        return false;\n      }\n\n      return !!this.network.address;\n    },\n    detectNetwork: function () {\n      var self = this;\n      return new Promise(function (accept, reject) {\n        // Try to detect the network we have artifacts for.\n        if (self.network_id) {\n          // We have a network id and a configuration, let's go with it.\n          if (self.networks[self.network_id] != null) {\n            return accept(self.network_id);\n          }\n        }\n\n        self.web3.version.getNetwork(function (err, result) {\n          if (err) return reject(err);\n          var network_id = result.toString(); // If we found the network via a number, let's use that.\n\n          if (self.hasNetwork(network_id)) {\n            self.setNetwork(network_id);\n            return accept();\n          } // Otherwise, go through all the networks that are listed as\n          // blockchain uris and see if they match.\n\n\n          var uris = Object.keys(self._json.networks).filter(function (network) {\n            return network.indexOf(\"blockchain://\") == 0;\n          });\n          var matches = uris.map(function (uri) {\n            return BlockchainUtils.matches.bind(BlockchainUtils, uri, self.web3.currentProvider);\n          });\n          Utils.parallel(matches, function (err, results) {\n            if (err) return reject(err);\n\n            for (var i = 0; i < results.length; i++) {\n              if (results[i]) {\n                self.setNetwork(uris[i]);\n                return accept();\n              }\n            } // We found nothing. Set the network id to whatever the provider states.\n\n\n            self.setNetwork(network_id);\n            accept();\n          });\n        });\n      });\n    },\n    setNetwork: function (network_id) {\n      if (!network_id) return;\n      this.network_id = network_id + \"\";\n    },\n    // Overrides the deployed address to null.\n    // You must call this explicitly so you don't inadvertently do this otherwise.\n    resetAddress: function () {\n      delete this.network.address;\n    },\n    link: function (name, address) {\n      var self = this;\n\n      if (typeof name == \"function\") {\n        var contract = name;\n\n        if (contract.isDeployed() == false) {\n          throw new Error(\"Cannot link contract without an address.\");\n        }\n\n        this.link(contract.contractName, contract.address); // Merge events so this contract knows about library's events\n\n        Object.keys(contract.events).forEach(function (topic) {\n          self.network.events[topic] = contract.events[topic];\n        });\n        return;\n      }\n\n      if (typeof name == \"object\") {\n        var obj = name;\n        Object.keys(obj).forEach(function (name) {\n          var a = obj[name];\n          self.link(name, a);\n        });\n        return;\n      }\n\n      if (this._json.networks[this.network_id] == null) {\n        this._json.networks[this.network_id] = {\n          events: {},\n          links: {}\n        };\n      }\n\n      this.network.links[name] = address;\n    },\n    // Note, this function can be called with two input types:\n    // 1. Object with a bunch of data; this data will be merged with the json data of contract being cloned.\n    // 2. network id; this will clone the contract and set a specific network id upon cloning.\n    clone: function (json) {\n      var self = this;\n      json = json || {};\n\n      var temp = function TruffleContract() {\n        this.constructor = temp;\n        return Contract.apply(this, arguments);\n      };\n\n      temp.prototype = Object.create(self.prototype);\n      var network_id; // If we have a network id passed\n\n      if (typeof json != \"object\") {\n        network_id = json;\n        json = self._json;\n      }\n\n      json = Utils.merge({}, self._json || {}, json);\n      temp._static_methods = this._static_methods;\n      temp._properties = this._properties;\n      temp._property_values = {};\n      temp._json = json;\n      Utils.bootstrap(temp);\n      temp.web3 = new Web3();\n      temp.class_defaults = temp.prototype.defaults || {};\n\n      if (network_id) {\n        temp.setNetwork(network_id);\n      } // Copy over custom key/values to the contract class\n\n\n      Object.keys(json).forEach(function (key) {\n        if (key.indexOf(\"x-\") != 0) return;\n        temp[key] = json[key];\n      });\n      return temp;\n    },\n    addProp: function (key, fn) {\n      var self = this;\n\n      var getter = function () {\n        if (fn.get != null) {\n          return fn.get.call(self);\n        }\n\n        return self._property_values[key] || fn.call(self);\n      };\n\n      var setter = function (val) {\n        if (fn.set != null) {\n          fn.set.call(self, val);\n          return;\n        } // If there's not a setter, then the property is immutable.\n\n\n        throw new Error(key + \" property is immutable\");\n      };\n\n      var definition = {};\n      definition.enumerable = false;\n      definition.configurable = false;\n      definition.get = getter;\n      definition.set = setter;\n      Object.defineProperty(this, key, definition);\n    },\n    toJSON: function () {\n      return this._json;\n    }\n  }; // Getter functions are scoped to Contract object.\n\n  Contract._properties = {\n    contract_name: {\n      get: function () {\n        return this.contractName;\n      },\n      set: function (val) {\n        this.contractName = val;\n      }\n    },\n    contractName: {\n      get: function () {\n        return this._json.contractName || \"Contract\";\n      },\n      set: function (val) {\n        this._json.contractName = val;\n      }\n    },\n    abi: {\n      get: function () {\n        return this._json.abi;\n      },\n      set: function (val) {\n        this._json.abi = val;\n      }\n    },\n    network: function () {\n      var network_id = this.network_id;\n\n      if (network_id == null) {\n        throw new Error(this.contractName + \" has no network id set, cannot lookup artifact data. Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.\");\n      } // TODO: this might be bad; setting a value on a get.\n\n\n      if (this._json.networks[network_id] == null) {\n        throw new Error(this.contractName + \" has no network configuration for its current network id (\" + network_id + \").\");\n      }\n\n      var returnVal = this._json.networks[network_id]; // Normalize output\n\n      if (returnVal.links == null) {\n        returnVal.links = {};\n      }\n\n      if (returnVal.events == null) {\n        returnVal.events = {};\n      }\n\n      return returnVal;\n    },\n    networks: function () {\n      return this._json.networks;\n    },\n    address: {\n      get: function () {\n        var address = this.network.address;\n\n        if (address == null) {\n          throw new Error(\"Cannot find deployed address: \" + this.contractName + \" not deployed or address not set.\");\n        }\n\n        return address;\n      },\n      set: function (val) {\n        if (val == null) {\n          throw new Error(\"Cannot set deployed address; malformed value: \" + val);\n        }\n\n        var network_id = this.network_id;\n\n        if (network_id == null) {\n          throw new Error(this.contractName + \" has no network id set, cannot lookup artifact data. Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.\");\n        } // Create a network if we don't have one.\n\n\n        if (this._json.networks[network_id] == null) {\n          this._json.networks[network_id] = {\n            events: {},\n            links: {}\n          };\n        } // Finally, set the address.\n\n\n        this.network.address = val;\n      }\n    },\n    transactionHash: {\n      get: function () {\n        var transactionHash = this.network.transactionHash;\n\n        if (transactionHash === null) {\n          throw new Error(\"Could not find transaction hash for \" + this.contractName);\n        }\n\n        return transactionHash;\n      },\n      set: function (val) {\n        this.network.transactionHash = val;\n      }\n    },\n    links: function () {\n      if (!this.network_id) {\n        throw new Error(this.contractName + \" has no network id set, cannot lookup artifact data. Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.\");\n      }\n\n      if (this._json.networks[this.network_id] == null) {\n        return {};\n      }\n\n      return this.network.links || {};\n    },\n    events: function () {\n      // helper web3; not used for provider\n      var web3 = new Web3();\n      var events;\n\n      if (this._json.networks[this.network_id] == null) {\n        events = {};\n      } else {\n        events = this.network.events || {};\n      } // Merge abi events with whatever's returned.\n\n\n      var abi = this.abi;\n      abi.forEach(function (item) {\n        if (item.type != \"event\") return;\n        var signature = item.name + \"(\";\n        item.inputs.forEach(function (input, index) {\n          signature += input.type;\n\n          if (index < item.inputs.length - 1) {\n            signature += \",\";\n          }\n        });\n        signature += \")\";\n        var topic = web3.sha3(signature);\n        events[topic] = item;\n      });\n      return events;\n    },\n    binary: function () {\n      return Utils.linkBytecode(this.bytecode, this.links);\n    },\n    deployedBinary: function () {\n      return Utils.linkBytecode(this.deployedBytecode, this.links);\n    },\n    // deprecated; use bytecode\n    unlinked_binary: {\n      get: function () {\n        return this.bytecode;\n      },\n      set: function (val) {\n        this.bytecode = val;\n      }\n    },\n    // alias for unlinked_binary; unlinked_binary will eventually be deprecated\n    bytecode: {\n      get: function () {\n        return this._json.bytecode;\n      },\n      set: function (val) {\n        this._json.bytecode = val;\n      }\n    },\n    deployedBytecode: {\n      get: function () {\n        var code = this._json.deployedBytecode;\n\n        if (code.indexOf(\"0x\") != 0) {\n          code = \"0x\" + code;\n        }\n\n        return code;\n      },\n      set: function (val) {\n        var code = val;\n\n        if (val.indexOf(\"0x\") != 0) {\n          code = \"0x\" + code;\n        }\n\n        this._json.deployedBytecode = code;\n      }\n    },\n    sourceMap: {\n      get: function () {\n        return this._json.sourceMap;\n      },\n      set: function (val) {\n        this._json.sourceMap = val;\n      }\n    },\n    deployedSourceMap: {\n      get: function () {\n        return this._json.deployedSourceMap;\n      },\n      set: function (val) {\n        this._json.deployedSourceMap = val;\n      }\n    },\n    source: {\n      get: function () {\n        return this._json.source;\n      },\n      set: function (val) {\n        this._json.source = val;\n      }\n    },\n    sourcePath: {\n      get: function () {\n        return this._json.sourcePath;\n      },\n      set: function (val) {\n        this._json.sourcePath = val;\n      }\n    },\n    legacyAST: {\n      get: function () {\n        return this._json.legacyAST;\n      },\n      set: function (val) {\n        this._json.legacyAST = val;\n      }\n    },\n    ast: {\n      get: function () {\n        return this._json.ast;\n      },\n      set: function (val) {\n        this._json.ast = val;\n      }\n    },\n    compiler: {\n      get: function () {\n        return this._json.compiler;\n      },\n      set: function (val) {\n        this._json.compiler = val;\n      }\n    },\n    // Deprecated\n    schema_version: function () {\n      return this.schemaVersion;\n    },\n    schemaVersion: function () {\n      return this._json.schemaVersion;\n    },\n    // deprecated\n    updated_at: function () {\n      return this.updatedAt;\n    },\n    updatedAt: function () {\n      try {\n        return this.network.updatedAt || this._json.updatedAt;\n      } catch (e) {\n        return this._json.updatedAt;\n      }\n    }\n  };\n  Utils.bootstrap(Contract);\n  module.exports = Contract;\n  return Contract;\n}(module || {});","map":{"version":3,"sources":["/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-app/client/node_modules/truffle-contract/contract.js"],"names":["ethJSABI","require","BlockchainUtils","Web3","StatusError","Object","keys","length","global","contract","module","Provider","provider","prototype","send","apply","arguments","sendAsync","BigNumber","toBigNumber","constructor","Utils","is_object","val","Array","isArray","is_big_number","e","decodeLogs","C","instance","logs","map","log","logABI","events","topics","copy","merge","partialABI","fullABI","indexed","inputs","filter","i","partial","name","type","anonymous","argTopics","slice","indexedData","join","indexedParams","decodeEvent","notIndexedData","data","notIndexedParams","event","args","reduce","acc","current","undefined","forEach","key","isBN","web3","toString","promisifyFunction","fn","self","call","tx_params","last_arg","pop","class_defaults","detectNetwork","then","Promise","accept","reject","callback","error","result","push","synchronizeFunction","tx","timeout","synchronization_timeout","start","Date","getTime","make_attempt","eth","getTransactionReceipt","err","receipt","includes","parseInt","status","statusError","Error","setTimeout","merged","object","j","value","parallel","arr","index","results","position","bootstrap","_static_methods","bind","_properties","addProp","linkBytecode","bytecode","links","library_name","library_address","regex","RegExp","replace","Contract","abi","address","contract_class","at","item","constant","sendTransaction","request","estimateGas","to","allEvents","transactionHash","setProvider","wrapped","currentProvider","new","contractName","_json","network_id","unlinked_libraries","binary","match","sort","intermediary","web3_instance","getCode","code","deployed","networks","isDeployed","defaults","hasNetwork","network","version","getNetwork","setNetwork","uris","indexOf","matches","uri","resetAddress","link","topic","obj","a","clone","json","temp","TruffleContract","create","_property_values","getter","get","setter","set","definition","enumerable","configurable","defineProperty","toJSON","contract_name","returnVal","signature","input","sha3","deployedBinary","deployedBytecode","unlinked_binary","sourceMap","deployedSourceMap","source","sourcePath","legacyAST","ast","compiler","schema_version","schemaVersion","updated_at","updatedAt","exports"],"mappings":"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","sourcesContent":["var ethJSABI = require(\"ethjs-abi\");\nvar BlockchainUtils = require(\"truffle-blockchain-utils\");\nvar Web3 = require(\"web3\");\nvar StatusError = require(\"./statuserror.js\")\n\n// For browserified version. If browserify gave us an empty version,\n// look for the one provided by the user.\nif (typeof Web3 == \"object\" && Object.keys(Web3).length == 0) {\n  Web3 = global.Web3;\n}\n\nvar contract = (function(module) {\n\n  // Planned for future features, logging, etc.\n  function Provider(provider) {\n    this.provider = provider;\n  }\n\n  Provider.prototype.send = function() {\n    return this.provider.send.apply(this.provider, arguments);\n  };\n\n  Provider.prototype.sendAsync = function() {\n    return this.provider.sendAsync.apply(this.provider, arguments);\n  };\n\n  var BigNumber = (new Web3()).toBigNumber(0).constructor;\n\n  var Utils = {\n    is_object: function(val) {\n      return typeof val == \"object\" && !Array.isArray(val);\n    },\n    is_big_number: function(val) {\n      if (typeof val != \"object\") return false;\n\n      // Instanceof won't work because we have multiple versions of Web3.\n      try {\n        new BigNumber(val);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    decodeLogs: function(C, instance, logs) {\n      return logs.map(function(log) {\n        var logABI = C.events[log.topics[0]];\n\n        if (logABI == null) {\n          return null;\n        }\n\n        // This function has been adapted from web3's SolidityEvent.decode() method,\n        // and built to work with ethjs-abi.\n\n        var copy = Utils.merge({}, log);\n\n        function partialABI(fullABI, indexed) {\n          var inputs = fullABI.inputs.filter(function (i) {\n            return i.indexed === indexed;\n          });\n\n          var partial = {\n            inputs: inputs,\n            name: fullABI.name,\n            type: fullABI.type,\n            anonymous: fullABI.anonymous\n          };\n\n          return partial;\n        }\n\n        var argTopics = logABI.anonymous ? copy.topics : copy.topics.slice(1);\n        var indexedData = \"0x\" + argTopics.map(function (topics) { return topics.slice(2); }).join(\"\");\n        var indexedParams = ethJSABI.decodeEvent(partialABI(logABI, true), indexedData);\n\n        var notIndexedData = copy.data;\n        var notIndexedParams = ethJSABI.decodeEvent(partialABI(logABI, false), notIndexedData);\n\n        copy.event = logABI.name;\n\n        copy.args = logABI.inputs.reduce(function (acc, current) {\n          var val = indexedParams[current.name];\n\n          if (val === undefined) {\n            val = notIndexedParams[current.name];\n          }\n\n          acc[current.name] = val;\n          return acc;\n        }, {});\n\n        Object.keys(copy.args).forEach(function(key) {\n          var val = copy.args[key];\n\n          // We have BN. Convert it to BigNumber\n          if (val.constructor.isBN) {\n            copy.args[key] = C.web3.toBigNumber(\"0x\" + val.toString(16));\n          }\n        });\n\n        delete copy.data;\n        delete copy.topics;\n\n        return copy;\n      }).filter(function(log) {\n        return log != null;\n      });\n    },\n    promisifyFunction: function(fn, C) {\n      var self = this;\n      return function() {\n        var instance = this;\n\n        var args = Array.prototype.slice.call(arguments);\n        var tx_params = {};\n        var last_arg = args[args.length - 1];\n\n        // It's only tx_params if it's an object and not a BigNumber.\n        if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {\n          tx_params = args.pop();\n        }\n\n        tx_params = Utils.merge(C.class_defaults, tx_params);\n\n        return C.detectNetwork().then(function() {\n          return new Promise(function(accept, reject) {\n            var callback = function(error, result) {\n              if (error != null) {\n                reject(error);\n              } else {\n                accept(result);\n              }\n            };\n            args.push(tx_params, callback);\n            fn.apply(instance.contract, args);\n          });\n        });\n      };\n    },\n    synchronizeFunction: function(fn, instance, C) {\n      var self = this;\n      return function() {\n        var args = Array.prototype.slice.call(arguments);\n        var tx_params = {};\n        var last_arg = args[args.length - 1];\n\n        // It's only tx_params if it's an object and not a BigNumber.\n        if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {\n          tx_params = args.pop();\n        }\n\n        tx_params = Utils.merge(C.class_defaults, tx_params);\n\n        return C.detectNetwork().then(function() {\n          return new Promise(function(accept, reject) {\n            var callback = function(error, tx) {\n              if (error != null) {\n                reject(error);\n                return;\n              }\n\n              var timeout;\n              if (C.synchronization_timeout === 0 || C.synchronization_timeout !== undefined) {\n                timeout = C.synchronization_timeout;\n              } else {\n                timeout = 240000;\n              }\n\n              var start = new Date().getTime();\n\n              var make_attempt = function() {\n                C.web3.eth.getTransactionReceipt(tx, function(err, receipt) {\n                  if (err && !err.toString().includes('unknown transaction')){\n                    return reject(err);\n                  }\n\n                  // Reject on transaction failures, accept otherwise\n                  // Handles \"0x00\" or hex 0\n                  if (receipt != null) {\n                    if (parseInt(receipt.status, 16) == 0){\n                      var statusError = new StatusError(tx_params, tx, receipt);\n                      return reject(statusError);\n                    } else {\n                      return accept({\n                        tx: tx,\n                        receipt: receipt,\n                        logs: Utils.decodeLogs(C, instance, receipt.logs)\n                      });\n                    }\n                  }\n\n                  if (timeout > 0 && new Date().getTime() - start > timeout) {\n                    return reject(new Error(\"Transaction \" + tx + \" wasn't processed in \" + (timeout / 1000) + \" seconds!\"));\n                  }\n\n                  setTimeout(make_attempt, 1000);\n                });\n              };\n\n              make_attempt();\n            };\n\n            args.push(tx_params, callback);\n            fn.apply(self, args);\n          });\n        });\n      };\n    },\n    merge: function() {\n      var merged = {};\n      var args = Array.prototype.slice.call(arguments);\n\n      for (var i = 0; i < args.length; i++) {\n        var object = args[i];\n        var keys = Object.keys(object);\n        for (var j = 0; j < keys.length; j++) {\n          var key = keys[j];\n          var value = object[key];\n          merged[key] = value;\n        }\n      }\n\n      return merged;\n    },\n    parallel: function (arr, callback) {\n      callback = callback || function () {};\n      if (!arr.length) {\n        return callback(null, []);\n      }\n      var index = 0;\n      var results = new Array(arr.length);\n      arr.forEach(function (fn, position) {\n        fn(function (err, result) {\n          if (err) {\n            callback(err);\n            callback = function () {};\n          } else {\n            index++;\n            results[position] = result;\n            if (index >= arr.length) {\n              callback(null, results);\n            }\n          }\n        });\n      });\n    },\n    bootstrap: function(fn) {\n      // Add our static methods\n      Object.keys(fn._static_methods).forEach(function(key) {\n        fn[key] = fn._static_methods[key].bind(fn);\n      });\n\n      // Add our properties.\n      Object.keys(fn._properties).forEach(function(key) {\n        fn.addProp(key, fn._properties[key]);\n      });\n\n      return fn;\n    },\n    linkBytecode: function(bytecode, links) {\n      Object.keys(links).forEach(function(library_name) {\n        var library_address = links[library_name];\n        var regex = new RegExp(\"__\" + library_name + \"_+\", \"g\");\n\n        bytecode = bytecode.replace(regex, library_address.replace(\"0x\", \"\"));\n      });\n\n      return bytecode;\n    }\n  };\n\n  // Accepts a contract object created with web3.eth.contract.\n  // Optionally, if called without `new`, accepts a network_id and will\n  // create a new version of the contract abstraction with that network_id set.\n  function Contract(contract) {\n    var self = this;\n    var constructor = this.constructor;\n    this.abi = constructor.abi;\n\n    if (typeof contract == \"string\") {\n      var address = contract;\n      var contract_class = constructor.web3.eth.contract(this.abi);\n      contract = contract_class.at(address);\n    }\n\n    this.contract = contract;\n\n    // Provision our functions.\n    for (var i = 0; i < this.abi.length; i++) {\n      var item = this.abi[i];\n      if (item.type == \"function\") {\n        if (item.constant == true) {\n          this[item.name] = Utils.promisifyFunction(contract[item.name], constructor);\n        } else {\n          this[item.name] = Utils.synchronizeFunction(contract[item.name], this, constructor);\n        }\n\n        this[item.name].call = Utils.promisifyFunction(contract[item.name].call, constructor);\n        this[item.name].sendTransaction = Utils.promisifyFunction(contract[item.name].sendTransaction, constructor);\n        this[item.name].request = contract[item.name].request;\n        this[item.name].estimateGas = Utils.promisifyFunction(contract[item.name].estimateGas, constructor);\n      }\n\n      if (item.type == \"event\") {\n        this[item.name] = contract[item.name];\n      }\n    }\n\n    this.sendTransaction = Utils.synchronizeFunction(function(tx_params, callback) {\n      if (typeof tx_params == \"function\") {\n        callback = tx_params;\n        tx_params = {};\n      }\n\n      tx_params.to = self.address;\n\n      constructor.web3.eth.sendTransaction.apply(constructor.web3.eth, [tx_params, callback]);\n    }, this, constructor);\n\n    this.send = function(value) {\n      return self.sendTransaction({value: value});\n    };\n\n    this.allEvents = contract.allEvents;\n    this.address = contract.address;\n    this.transactionHash = contract.transactionHash;\n  };\n\n  Contract._static_methods = {\n    setProvider: function(provider) {\n      if (!provider) {\n        throw new Error(\"Invalid provider passed to setProvider(); provider is \" + provider);\n      }\n\n      var wrapped = new Provider(provider);\n      this.web3.setProvider(wrapped);\n      this.currentProvider = provider;\n    },\n\n    new: function() {\n      var self = this;\n\n      if (this.currentProvider == null) {\n        throw new Error(this.contractName + \" error: Please call setProvider() first before calling new().\");\n      }\n\n      var args = Array.prototype.slice.call(arguments);\n\n      if (!this.bytecode) {\n        throw new Error(this._json.contractName + \" error: contract binary not set. Can't deploy new instance.\");\n      }\n\n      return self.detectNetwork().then(function(network_id) {\n        // After the network is set, check to make sure everything's ship shape.\n        var regex = /__[^_]+_+/g;\n        var unlinked_libraries = self.binary.match(regex);\n\n        if (unlinked_libraries != null) {\n          unlinked_libraries = unlinked_libraries.map(function(name) {\n            // Remove underscores\n            return name.replace(/_/g, \"\");\n          }).sort().filter(function(name, index, arr) {\n            // Remove duplicates\n            if (index + 1 >= arr.length) {\n              return true;\n            }\n\n            return name != arr[index + 1];\n          }).join(\", \");\n\n          throw new Error(self.contractName + \" contains unresolved libraries. You must deploy and link the following libraries before you can deploy a new version of \" + self._json.contractName + \": \" + unlinked_libraries);\n        }\n      }).then(function() {\n        return new Promise(function(accept, reject) {\n          var contract_class = self.web3.eth.contract(self.abi);\n          var tx_params = {};\n          var last_arg = args[args.length - 1];\n\n          // It's only tx_params if it's an object and not a BigNumber.\n          if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {\n            tx_params = args.pop();\n          }\n\n          // Validate constructor args\n          var constructor = self.abi.filter(function(item){\n            return item.type === 'constructor';\n          });\n\n          if (constructor.length && constructor[0].inputs.length !== args.length){\n            throw new Error(self.contractName + \" contract constructor expected \" + constructor[0].inputs.length + \" arguments, received \" + args.length);\n          }\n\n          tx_params = Utils.merge(self.class_defaults, tx_params);\n\n          if (tx_params.data == null) {\n            tx_params.data = self.binary;\n          }\n\n          // web3 0.9.0 and above calls new this callback twice.\n          // Why, I have no idea...\n          var intermediary = function(err, web3_instance) {\n            if (err != null) {\n              reject(err);\n              return;\n            }\n\n            if (err == null && web3_instance != null && web3_instance.address != null) {\n              accept(new self(web3_instance));\n            }\n          };\n\n          args.push(tx_params, intermediary);\n          contract_class.new.apply(contract_class, args);\n        });\n      });\n    },\n\n    at: function(address) {\n      var self = this;\n\n      if (address == null || typeof address != \"string\" || address.length != 42) {\n        throw new Error(\"Invalid address passed to \" + this._json.contractName + \".at(): \" + address);\n      }\n\n      var contract = new this(address);\n\n      // Add thennable to allow people opt into new recommended usage.\n      contract.then = function(fn) {\n        return self.detectNetwork().then(function(network_id) {\n          var instance = new self(address);\n\n          return new Promise(function(accept, reject) {\n            self.web3.eth.getCode(address, function(err, code) {\n              if (err) return reject(err);\n\n              if (!code || code.replace(\"0x\", \"\").replace(/0/g, \"\") === '') {\n                return reject(new Error(\"Cannot create instance of \" + self.contractName + \"; no code at address \" + address));\n              }\n\n              accept(instance);\n            });\n          });\n        }).then(fn);\n      };\n\n      return contract;\n    },\n\n    deployed: function() {\n      var self = this;\n      return self.detectNetwork().then(function() {\n        // We don't have a network config for the one we found\n        if (self._json.networks[self.network_id] == null) {\n          throw new Error(self.contractName + \" has not been deployed to detected network (network/artifact mismatch)\");\n        }\n\n        // If we found the network but it's not deployed\n        if (!self.isDeployed()) {\n          throw new Error(self.contractName + \" has not been deployed to detected network (\" + self.network_id + \")\");\n        }\n\n        return new self(self.address);\n      });\n    },\n\n    defaults: function(class_defaults) {\n      if (this.class_defaults == null) {\n        this.class_defaults = {};\n      }\n\n      if (class_defaults == null) {\n        class_defaults = {};\n      }\n\n      var self = this;\n      Object.keys(class_defaults).forEach(function(key) {\n        var value = class_defaults[key];\n        self.class_defaults[key] = value;\n      });\n\n      return this.class_defaults;\n    },\n\n    hasNetwork: function(network_id) {\n      return this._json.networks[network_id + \"\"] != null;\n    },\n\n    isDeployed: function() {\n      if (this.network_id == null) {\n        return false;\n      }\n\n      if (this._json.networks[this.network_id] == null) {\n        return false;\n      }\n\n      return !!this.network.address;\n    },\n\n    detectNetwork: function() {\n      var self = this;\n\n      return new Promise(function(accept, reject) {\n        // Try to detect the network we have artifacts for.\n        if (self.network_id) {\n          // We have a network id and a configuration, let's go with it.\n          if (self.networks[self.network_id] != null) {\n            return accept(self.network_id);\n          }\n        }\n\n        self.web3.version.getNetwork(function(err, result) {\n          if (err) return reject(err);\n\n          var network_id = result.toString();\n\n          // If we found the network via a number, let's use that.\n          if (self.hasNetwork(network_id)) {\n            self.setNetwork(network_id);\n            return accept();\n          }\n\n          // Otherwise, go through all the networks that are listed as\n          // blockchain uris and see if they match.\n          var uris = Object.keys(self._json.networks).filter(function(network) {\n            return network.indexOf(\"blockchain://\") == 0;\n          });\n\n          var matches = uris.map(function(uri) {\n            return BlockchainUtils.matches.bind(BlockchainUtils, uri, self.web3.currentProvider);\n          });\n\n          Utils.parallel(matches, function(err, results) {\n            if (err) return reject(err);\n\n            for (var i = 0; i < results.length; i++) {\n              if (results[i]) {\n                self.setNetwork(uris[i]);\n                return accept();\n              }\n            }\n\n            // We found nothing. Set the network id to whatever the provider states.\n            self.setNetwork(network_id);\n\n            accept();\n          });\n\n        });\n      });\n    },\n\n    setNetwork: function(network_id) {\n      if (!network_id) return;\n      this.network_id = network_id + \"\";\n    },\n\n    // Overrides the deployed address to null.\n    // You must call this explicitly so you don't inadvertently do this otherwise.\n    resetAddress: function() {\n      delete this.network.address;\n    },\n\n    link: function(name, address) {\n      var self = this;\n\n      if (typeof name == \"function\") {\n        var contract = name;\n\n        if (contract.isDeployed() == false) {\n          throw new Error(\"Cannot link contract without an address.\");\n        }\n\n        this.link(contract.contractName, contract.address);\n\n        // Merge events so this contract knows about library's events\n        Object.keys(contract.events).forEach(function(topic) {\n          self.network.events[topic] = contract.events[topic];\n        });\n\n        return;\n      }\n\n      if (typeof name == \"object\") {\n        var obj = name;\n        Object.keys(obj).forEach(function(name) {\n          var a = obj[name];\n          self.link(name, a);\n        });\n        return;\n      }\n\n      if (this._json.networks[this.network_id] == null) {\n        this._json.networks[this.network_id] = {\n          events: {},\n          links: {}\n        };\n      }\n\n      this.network.links[name] = address;\n    },\n\n    // Note, this function can be called with two input types:\n    // 1. Object with a bunch of data; this data will be merged with the json data of contract being cloned.\n    // 2. network id; this will clone the contract and set a specific network id upon cloning.\n    clone: function(json) {\n      var self = this;\n\n      json = json || {};\n\n      var temp = function TruffleContract() {\n        this.constructor = temp;\n        return Contract.apply(this, arguments);\n      };\n\n      temp.prototype = Object.create(self.prototype);\n\n      var network_id;\n\n      // If we have a network id passed\n      if (typeof json != \"object\") {\n        network_id = json;\n        json = self._json;\n      }\n\n      json = Utils.merge({}, self._json || {}, json);\n\n      temp._static_methods = this._static_methods;\n      temp._properties = this._properties;\n\n      temp._property_values = {};\n      temp._json = json;\n\n      Utils.bootstrap(temp);\n\n      temp.web3 = new Web3();\n      temp.class_defaults = temp.prototype.defaults || {};\n\n      if (network_id) {\n        temp.setNetwork(network_id);\n      }\n\n      // Copy over custom key/values to the contract class\n      Object.keys(json).forEach(function(key) {\n        if (key.indexOf(\"x-\") != 0) return;\n        temp[key] = json[key];\n      });\n\n      return temp;\n    },\n\n    addProp: function(key, fn) {\n      var self = this;\n\n      var getter = function() {\n        if (fn.get != null) {\n          return fn.get.call(self);\n        }\n\n        return self._property_values[key] || fn.call(self);\n      }\n      var setter = function(val) {\n        if (fn.set != null) {\n          fn.set.call(self, val);\n          return;\n        }\n\n        // If there's not a setter, then the property is immutable.\n        throw new Error(key + \" property is immutable\");\n      };\n\n      var definition = {};\n      definition.enumerable = false;\n      definition.configurable = false;\n      definition.get = getter;\n      definition.set = setter;\n\n      Object.defineProperty(this, key, definition);\n    },\n\n    toJSON: function() {\n      return this._json;\n    }\n  };\n\n  // Getter functions are scoped to Contract object.\n  Contract._properties = {\n    contract_name: {\n      get: function() {\n        return this.contractName;\n      },\n      set: function(val) {\n        this.contractName = val;\n      }\n    },\n    contractName: {\n      get: function() {\n        return this._json.contractName || \"Contract\";\n      },\n      set: function(val) {\n        this._json.contractName = val;\n      }\n    },\n    abi: {\n      get: function() {\n        return this._json.abi;\n      },\n      set: function(val) {\n        this._json.abi = val;\n      }\n    },\n    network: function() {\n      var network_id = this.network_id;\n\n      if (network_id == null) {\n        throw new Error(this.contractName + \" has no network id set, cannot lookup artifact data. Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.\");\n      }\n\n      // TODO: this might be bad; setting a value on a get.\n      if (this._json.networks[network_id] == null) {\n        throw new Error(this.contractName + \" has no network configuration for its current network id (\" + network_id + \").\");\n      }\n\n      var returnVal = this._json.networks[network_id];\n\n      // Normalize output\n      if (returnVal.links == null) {\n        returnVal.links = {};\n      }\n\n      if (returnVal.events == null) {\n        returnVal.events = {};\n      }\n\n      return returnVal;\n    },\n    networks: function() {\n      return this._json.networks;\n    },\n    address: {\n      get: function() {\n        var address = this.network.address;\n\n        if (address == null) {\n          throw new Error(\"Cannot find deployed address: \" + this.contractName + \" not deployed or address not set.\");\n        }\n\n        return address;\n      },\n      set: function(val) {\n        if (val == null) {\n          throw new Error(\"Cannot set deployed address; malformed value: \" + val);\n        }\n\n        var network_id = this.network_id;\n\n        if (network_id == null) {\n          throw new Error(this.contractName + \" has no network id set, cannot lookup artifact data. Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.\");\n        }\n\n        // Create a network if we don't have one.\n        if (this._json.networks[network_id] == null) {\n          this._json.networks[network_id] = {\n            events: {},\n            links: {}\n          };\n        }\n\n        // Finally, set the address.\n        this.network.address = val;\n      }\n    },\n    transactionHash: {\n      get: function() {\n        var transactionHash = this.network.transactionHash;\n\n        if(transactionHash === null) {\n          throw new Error(\"Could not find transaction hash for \" + this.contractName);\n        }\n\n        return transactionHash;\n      },\n      set: function(val) {\n        this.network.transactionHash = val;\n      }\n    },\n    links: function() {\n      if (!this.network_id) {\n        throw new Error(this.contractName + \" has no network id set, cannot lookup artifact data. Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.\");\n      }\n\n      if (this._json.networks[this.network_id] == null) {\n        return {};\n      }\n\n      return this.network.links || {};\n    },\n    events: function() {\n      // helper web3; not used for provider\n      var web3 = new Web3();\n\n      var events;\n\n      if (this._json.networks[this.network_id] == null) {\n        events = {};\n      } else {\n        events = this.network.events || {};\n      }\n\n      // Merge abi events with whatever's returned.\n      var abi = this.abi;\n\n      abi.forEach(function(item) {\n        if (item.type != \"event\") return;\n\n        var signature = item.name + \"(\";\n\n        item.inputs.forEach(function(input, index) {\n          signature += input.type;\n\n          if (index < item.inputs.length - 1) {\n            signature += \",\";\n          }\n        });\n\n        signature += \")\";\n\n        var topic = web3.sha3(signature);\n\n        events[topic] = item;\n      });\n\n      return events;\n    },\n    binary: function() {\n      return Utils.linkBytecode(this.bytecode, this.links);\n    },\n    deployedBinary: function() {\n      return Utils.linkBytecode(this.deployedBytecode, this.links);\n    },\n    // deprecated; use bytecode\n    unlinked_binary: {\n      get: function() {\n        return this.bytecode;\n      },\n      set: function(val) {\n        this.bytecode = val;\n      }\n    },\n    // alias for unlinked_binary; unlinked_binary will eventually be deprecated\n    bytecode: {\n      get: function() {\n        return this._json.bytecode;\n      },\n      set: function(val) {\n        this._json.bytecode = val;\n      }\n    },\n    deployedBytecode: {\n      get: function() {\n        var code = this._json.deployedBytecode;\n\n        if (code.indexOf(\"0x\") != 0) {\n          code = \"0x\" + code;\n        }\n\n        return code;\n      },\n      set: function(val) {\n        var code = val;\n\n        if (val.indexOf(\"0x\") != 0) {\n          code = \"0x\" + code;\n        }\n\n        this._json.deployedBytecode = code;\n      }\n    },\n    sourceMap: {\n      get: function() {\n        return this._json.sourceMap;\n      },\n      set: function(val) {\n        this._json.sourceMap = val;\n      }\n    },\n    deployedSourceMap: {\n      get: function() {\n        return this._json.deployedSourceMap;\n      },\n      set: function(val) {\n        this._json.deployedSourceMap = val;\n      }\n    },\n    source: {\n      get: function() {\n        return this._json.source;\n      },\n      set: function(val) {\n        this._json.source = val;\n      }\n    },\n    sourcePath: {\n      get: function() {\n        return this._json.sourcePath;\n      },\n      set: function(val) {\n        this._json.sourcePath = val;\n      }\n    },\n    legacyAST: {\n      get: function() {\n        return this._json.legacyAST;\n      },\n      set: function(val) {\n        this._json.legacyAST = val;\n      }\n    },\n    ast: {\n      get: function() {\n        return this._json.ast;\n      },\n      set: function(val) {\n        this._json.ast = val;\n      }\n    },\n    compiler: {\n      get: function() {\n        return this._json.compiler;\n      },\n      set: function(val) {\n        this._json.compiler = val;\n      }\n    },\n    // Deprecated\n    schema_version: function() {\n      return this.schemaVersion;\n    },\n    schemaVersion: function() {\n      return this._json.schemaVersion;\n    },\n    // deprecated\n    updated_at: function() {\n      return this.updatedAt;\n    },\n    updatedAt: function() {\n      try {\n        return this.network.updatedAt || this._json.updatedAt;\n      } catch (e) {\n        return this._json.updatedAt;\n      }\n    }\n  };\n\n  Utils.bootstrap(Contract);\n\n  module.exports = Contract;\n\n  return Contract;\n})(module || {});\n"]},"metadata":{},"sourceType":"script"}