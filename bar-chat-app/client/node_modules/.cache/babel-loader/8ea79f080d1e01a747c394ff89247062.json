{"ast":null,"code":"var _jsxFileName = \"/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { Link, withRouter } from 'react-router-dom';\nimport Web3 from 'web3';\nimport TruffleContract from 'truffle-contract';\nimport Blockchain from '../../eth-bar/src/blockchain';\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport firebase from '../../config/firebase';\nimport './Chat.css';\nimport { checkPropTypes } from 'prop-types';\nimport BarData from '../../eth-bar/build/contracts/Bar.json';\nlet socket;\n\nconst Chat =\n/*{location}*/\nprops => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [newuser, setNewUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [mmAccount, setmmAccount] = useState('0x0');\n  const ENDPOINT = 'localhost:5000';\n  let web3Provider = null;\n  let web3 = null;\n  let msgList = null;\n\n  if (!firebase.getCurrentUsername()) {\n    alert('Please Login First');\n    props.history.replace('/');\n  }\n\n  if (!firebase.getVerified()) {\n    alert('Please verify your email first');\n    props.history.replace('/');\n  } // if (web3 !== null) {\n  //   web3Provider = web3.currentProvider;\n  //   console.log('web3Provider if');\n  //   console.log(web3Provider);\n  // } else {\n  //   web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');  \n  //   console.log(\"web3Provider else\");\n  //   console.log(web3Provider) \n  // }\n  // web3 = new Web3(web3Provider);\n  // msgList = TruffleContract(BarData);\n  // msgList.setProvider(web3Provider);\n  // console.log(msgList);\n  // let msgListInstance = null;\n\n\n  useEffect(() => {\n    //const {name} = queryString.parse(location.search);\n    const name = firebase.getCurrentUsername();\n    console.log(name);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(\n    /*room*/\n    '100'); //setUsers([{\"name\":\"users1\"},{\"name\":\"user2\"}]); //DEBUG\n\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT\n  /*location.search*/\n  ]);\n  useEffect(() => {\n    console.log(\"here\");\n    socket.on('message', message => {\n      //console.log(\"incoming message\")\n      //console.log(message);\n      setMessages(messages => [...messages, message]); //Blockchain.createMessage(message.text);\n      //Blockchain.renderMsgs();\n    }); //console.log(messages);\n\n    /*socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });*/\n    //console.log('outta');\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault(); //console.log(message);\n\n    if (message) {\n      web3.eth.getCoinbase((err, account) => {\n        setmmAccount(account);\n        console.log(account);\n        console.log(msgList);\n        msgList.deployed().then(instance => {\n          msgListInstance = instance;\n          console.log(instance);\n          console.log(\"before create message\");\n          msgListInstance.createMessage(message);\n          console.log(\"after create message\");\n        });\n      });\n      socket.emit('sendMessage', message, () => setMessage('')); //console.log(messages);\n    }\n  };\n\n  const updateUsers = event => {\n    event.preventDefault();\n\n    if (newuser) {\n      setUsers(users => [...users, {\n        \"name\": newuser\n      }]);\n    }\n  };\n\n  const removeUser = usr => {\n    if (usr) {\n      //setRoom('');\n      setUsers(users => users.filter(item => item.name !== usr));\n    }\n  };\n\n  let isEntered = true; // if(room === ''){\n  //   isEntered = false;\n  // }\n\n  return isEntered ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    user2: room,\n    setRoom: setRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextContainer, {\n    name: name,\n    isEntered: isEntered,\n    users: users,\n    setRoom: setRoom,\n    newuser: newuser,\n    setNewUser: setNewUser,\n    props: props,\n    updateUsers: updateUsers,\n    removeUser: removeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextContainer, {\n    name: name,\n    isEntered: isEntered,\n    users: users,\n    setRoom: setRoom,\n    newuser: newuser,\n    setNewUser: setNewUser,\n    props: props,\n    updateUsers: updateUsers,\n    removeUser: removeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }));\n};\n\nexport default withRouter(Chat);","map":{"version":3,"sources":["/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Link","withRouter","Web3","TruffleContract","Blockchain","TextContainer","Messages","InfoBar","Input","firebase","checkPropTypes","BarData","socket","Chat","props","name","setName","room","setRoom","newuser","setNewUser","users","setUsers","message","setMessage","messages","setMessages","mmAccount","setmmAccount","ENDPOINT","web3Provider","web3","msgList","getCurrentUsername","alert","history","replace","getVerified","console","log","emit","error","off","on","sendMessage","event","preventDefault","eth","getCoinbase","err","account","deployed","then","instance","msgListInstance","createMessage","updateUsers","removeUser","usr","filter","item","isEntered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { Link, withRouter } from 'react-router-dom';\nimport Web3 from 'web3';\nimport TruffleContract from 'truffle-contract';\n\nimport Blockchain from '../../eth-bar/src/blockchain';\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport firebase from '../../config/firebase';\nimport './Chat.css';\nimport { checkPropTypes } from 'prop-types';\nimport BarData from '../../eth-bar/build/contracts/Bar.json'; \n\nlet socket;\n\nconst Chat = ( /*{location}*/ props ) => {\n    \n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [newuser, setNewUser] = useState('');\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [mmAccount, setmmAccount] = useState('0x0');\n    const ENDPOINT = 'localhost:5000';\n    let web3Provider = null;\n    let web3 = null\n    let msgList = null;\n\n    if(!firebase.getCurrentUsername()) {\n        alert('Please Login First');\n        props.history.replace('/');\n    }\n\n    if(!firebase.getVerified()) {\n        alert('Please verify your email first');\n        props.history.replace('/');\n    }\n\n    // if (web3 !== null) {\n    //   web3Provider = web3.currentProvider;\n    //   console.log('web3Provider if');\n    //   console.log(web3Provider);\n    // } else {\n    //   web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');  \n    //   console.log(\"web3Provider else\");\n    //   console.log(web3Provider) \n    // }\n\n    // web3 = new Web3(web3Provider);\n    // msgList = TruffleContract(BarData);\n    // msgList.setProvider(web3Provider);\n    // console.log(msgList);\n    // let msgListInstance = null;\n\n    useEffect( () => {\n        //const {name} = queryString.parse(location.search);\n        \n        const name = firebase.getCurrentUsername();\n        console.log(name);\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(/*room*/ '100');\n        //setUsers([{\"name\":\"users1\"},{\"name\":\"user2\"}]); //DEBUG\n\n        socket.emit('join', {name, room}, (error) => {\n            if(error) {\n              alert(error);\n            }\n        });\n\n        return () => {\n          socket.emit('disconnect');\n          socket.off();\n        }\n\n    }, [ENDPOINT, /*location.search*/]);\n    \n    useEffect(() => {\n        console.log(\"here\")\n        socket.on('message', message => {\n          \n          //console.log(\"incoming message\")\n          //console.log(message);\n          setMessages(messages => [ ...messages, message ]);\n          //Blockchain.createMessage(message.text);\n          //Blockchain.renderMsgs();\n        });\n        //console.log(messages);\n        /*socket.on(\"roomData\", ({ users }) => {\n          setUsers(users);\n        });*/\n        //console.log('outta');\n\n    },[]);\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n        //console.log(message);\n        if(message) {\n          web3.eth.getCoinbase((err,account) => {\n            setmmAccount(account);\n            console.log(account)\n            console.log(msgList);\n            msgList.deployed().then((instance) => {\n              msgListInstance = instance;\n              console.log(instance);\n              console.log(\"before create message\");\n              msgListInstance.createMessage(message);\n              console.log(\"after create message\");\n            })\n          })\n          socket.emit('sendMessage', message, () => setMessage(''));\n          //console.log(messages);\n          \n        }\n      }\n\n    const updateUsers = (event) => {\n        event.preventDefault();\n        \n        if(newuser) {\n          setUsers(users => [ ...users, {\"name\":newuser} ]);\n        }\n    }\n\n    const removeUser = (usr) => {\n      \n      if(usr) {\n        //setRoom('');\n        setUsers(users => users.filter(item => item.name !== usr));\n      }\n  }\n    \n    let isEntered = true;\n    // if(room === ''){\n    //   isEntered = false;\n    // }\n\n    return (\n        isEntered ? \n        (\n            <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar  user2={room} setRoom={setRoom}/>\n                <Messages messages={messages} name={name}/>\n                <Input  message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n            </div>\n              <TextContainer name={name} isEntered={isEntered} users={users} setRoom = {setRoom} \n                newuser={newuser} setNewUser={setNewUser} props={props}\n                updateUsers={updateUsers} removeUser={removeUser}/>\n            </div>\n        ) \n        :\n        (\n          <div className=\"outerContainer\">\n              <TextContainer name={name} isEntered={isEntered} users={users} setRoom = {setRoom} \n                newuser={newuser} setNewUser={setNewUser} props={props}\n                updateUsers={updateUsers} removeUser={removeUser}/>\n          </div>\n        )\n    );\n}\n\nexport default withRouter(Chat);"]},"metadata":{},"sourceType":"module"}