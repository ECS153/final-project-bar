{"ast":null,"code":"'use strict';\n\nvar BN = require('bn.js');\n\nvar numberToBN = require('number-to-bn');\n\nvar keccak256 = require('js-sha3').keccak_256; // from ethereumjs-util\n\n\nfunction stripZeros(aInput) {\n  var a = aInput; // eslint-disable-line\n\n  var first = a[0]; // eslint-disable-line\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n}\n\nfunction bnToBuffer(bnInput) {\n  var bn = bnInput; // eslint-disable-line\n\n  var hex = bn.toString(16); // eslint-disable-line\n\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n\n  return stripZeros(new Buffer(hex, 'hex'));\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction hexOrBuffer(valueInput, name) {\n  var value = valueInput; // eslint-disable-line\n\n  if (!Buffer.isBuffer(value)) {\n    if (!isHexString(value)) {\n      var error = new Error(name ? '[ethjs-abi] invalid ' + name : '[ethjs-abi] invalid hex or buffer, must be a prefixed alphanumeric even length hex string');\n      error.reason = '[ethjs-abi] invalid hex string, hex must be prefixed and alphanumeric (e.g. 0x023..)';\n      error.value = value;\n      throw error;\n    }\n\n    value = value.substring(2);\n\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n\n    value = new Buffer(value, 'hex');\n  }\n\n  return value;\n}\n\nfunction hexlify(value) {\n  if (typeof value === 'number') {\n    return '0x' + bnToBuffer(new BN(value)).toString('hex');\n  } else if (value.mod || value.modulo) {\n    return '0x' + bnToBuffer(value).toString('hex');\n  } else {\n    // eslint-disable-line\n    return '0x' + hexOrBuffer(value).toString('hex');\n  }\n} // getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n\n\nfunction getKeys(params, key, allowEmpty) {\n  var result = []; // eslint-disable-line\n\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-abi] while getting keys, invalid params value ' + JSON.stringify(params));\n  }\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('[ethjs-abi] while getKeys found invalid ABI data structure, type value not string');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction coderNumber(size, signed) {\n  return {\n    encode: function encodeNumber(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      if (typeof value === 'object' && value.toString && (value.toTwos || value.dividedToIntegerBy)) {\n        value = value.toString(10).split('.')[0];\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        value = String(value).split('.')[0];\n      }\n\n      value = numberToBN(value);\n      value = value.toTwos(size * 8).maskn(size * 8);\n\n      if (signed) {\n        value = value.fromTwos(size * 8).toTwos(256);\n      }\n\n      return value.toArrayLike(Buffer, 'be', 32);\n    },\n    decode: function decodeNumber(data, offset) {\n      var junkLength = 32 - size; // eslint-disable-line\n\n      var value = new BN(data.slice(offset + junkLength, offset + 32)); // eslint-disable-line\n\n      if (signed) {\n        value = value.fromTwos(size * 8);\n      } else {\n        value = value.maskn(size * 8);\n      }\n\n      return {\n        consumed: 32,\n        value: new BN(value.toString(10))\n      };\n    }\n  };\n}\n\nvar uint256Coder = coderNumber(32, false);\nvar coderBoolean = {\n  encode: function encodeBoolean(value) {\n    return uint256Coder.encode(value ? 1 : 0);\n  },\n  decode: function decodeBoolean(data, offset) {\n    var result = uint256Coder.decode(data, offset); // eslint-disable-line\n\n    return {\n      consumed: result.consumed,\n      value: !result.value.isZero()\n    };\n  }\n};\n\nfunction coderFixedBytes(length) {\n  return {\n    encode: function encodeFixedBytes(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      value = hexOrBuffer(value);\n\n      if (value.length === 32) {\n        return value;\n      }\n\n      var result = new Buffer(32); // eslint-disable-line\n\n      result.fill(0);\n      value.copy(result);\n      return result;\n    },\n    decode: function decodeFixedBytes(data, offset) {\n      if (data.length < offset + 32) {\n        throw new Error('[ethjs-abi] while decoding fixed bytes, invalid bytes data length: ' + length);\n      }\n\n      return {\n        consumed: 32,\n        value: '0x' + data.slice(offset, offset + length).toString('hex')\n      };\n    }\n  };\n}\n\nvar coderAddress = {\n  encode: function encodeAddress(valueInput) {\n    var value = valueInput; // eslint-disable-line\n\n    var result = new Buffer(32); // eslint-disable-line\n\n    if (!isHexString(value, 20)) {\n      throw new Error('[ethjs-abi] while encoding address, invalid address value, not alphanumeric 20 byte hex string');\n    }\n\n    value = hexOrBuffer(value);\n    result.fill(0);\n    value.copy(result, 12);\n    return result;\n  },\n  decode: function decodeAddress(data, offset) {\n    if (data.length === 0) {\n      return {\n        consumed: 32,\n        value: '0x'\n      };\n    }\n\n    if (data.length < offset + 32) {\n      throw new Error('[ethjs-abi] while decoding address data, invalid address data, invalid byte length ' + data.length);\n    }\n\n    return {\n      consumed: 32,\n      value: '0x' + data.slice(offset + 12, offset + 32).toString('hex')\n    };\n  }\n};\n\nfunction encodeDynamicBytesHelper(value) {\n  var dataLength = parseInt(32 * Math.ceil(value.length / 32)); // eslint-disable-line\n\n  var padding = new Buffer(dataLength - value.length); // eslint-disable-line\n\n  padding.fill(0);\n  return Buffer.concat([uint256Coder.encode(value.length), value, padding]);\n}\n\nfunction decodeDynamicBytesHelper(data, offset) {\n  if (data.length < offset + 32) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32));\n  }\n\n  var length = uint256Coder.decode(data, offset).value; // eslint-disable-line\n\n  length = length.toNumber();\n\n  if (data.length < offset + 32 + length) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32 + length));\n  }\n\n  return {\n    consumed: parseInt(32 + 32 * Math.ceil(length / 32), 10),\n    value: data.slice(offset + 32, offset + 32 + length)\n  };\n}\n\nvar coderDynamicBytes = {\n  encode: function encodeDynamicBytes(value) {\n    return encodeDynamicBytesHelper(hexOrBuffer(value));\n  },\n  decode: function decodeDynamicBytes(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n\n    result.value = '0x' + result.value.toString('hex');\n    return result;\n  },\n  dynamic: true\n};\nvar coderString = {\n  encode: function encodeString(value) {\n    return encodeDynamicBytesHelper(new Buffer(value, 'utf8'));\n  },\n  decode: function decodeString(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n\n    result.value = result.value.toString('utf8');\n    return result;\n  },\n  dynamic: true\n};\n\nfunction coderArray(coder, lengthInput) {\n  return {\n    encode: function encodeArray(value) {\n      var result = new Buffer(0); // eslint-disable-line\n\n      var length = lengthInput; // eslint-disable-line\n\n      if (!Array.isArray(value)) {\n        throw new Error('[ethjs-abi] while encoding array, invalid array data, not type Object (Array)');\n      }\n\n      if (length === -1) {\n        length = value.length;\n        result = uint256Coder.encode(length);\n      }\n\n      if (length !== value.length) {\n        throw new Error('[ethjs-abi] while encoding array, size mismatch array length ' + length + ' does not equal ' + value.length);\n      }\n\n      value.forEach(function (resultValue) {\n        result = Buffer.concat([result, coder.encode(resultValue)]);\n      });\n      return result;\n    },\n    decode: function decodeArray(data, offsetInput) {\n      var length = lengthInput; // eslint-disable-line\n\n      var offset = offsetInput; // eslint-disable-line\n      // @TODO:\n      // if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n      var consumed = 0; // eslint-disable-line\n\n      var decodeResult; // eslint-disable-line\n\n      if (length === -1) {\n        decodeResult = uint256Coder.decode(data, offset);\n        length = decodeResult.value.toNumber();\n        consumed += decodeResult.consumed;\n        offset += decodeResult.consumed;\n      }\n\n      var value = []; // eslint-disable-line\n\n      for (var i = 0; i < length; i++) {\n        // eslint-disable-line\n        var loopResult = coder.decode(data, offset);\n        consumed += loopResult.consumed;\n        offset += loopResult.consumed;\n        value.push(loopResult.value);\n      }\n\n      return {\n        consumed: consumed,\n        value: value\n      };\n    },\n    dynamic: lengthInput === -1\n  };\n} // Break the type up into [staticType][staticArray]*[dynamicArray]? | [dynamicType] and\n// build the coder up from its parts\n\n\nvar paramTypePart = new RegExp(/^((u?int|bytes)([0-9]*)|(address|bool|string)|(\\[([0-9]*)\\]))/);\n\nfunction getParamCoder(typeInput) {\n  var type = typeInput; // eslint-disable-line\n\n  var coder = null; // eslint-disable-line\n\n  var invalidTypeErrorMessage = '[ethjs-abi] while getting param coder (getParamCoder) type value ' + JSON.stringify(type) + ' is either invalid or unsupported by ethjs-abi.';\n\n  while (type) {\n    var part = type.match(paramTypePart); // eslint-disable-line\n\n    if (!part) {\n      throw new Error(invalidTypeErrorMessage);\n    }\n\n    type = type.substring(part[0].length);\n    var prefix = part[2] || part[4] || part[5]; // eslint-disable-line\n\n    switch (prefix) {\n      case 'int':\n      case 'uint':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        var intSize = parseInt(part[3] || 256); // eslint-disable-line\n\n        if (intSize === 0 || intSize > 256 || intSize % 8 !== 0) {\n          throw new Error('[ethjs-abi] while getting param coder for type ' + type + ', invalid ' + prefix + '<N> width: ' + type);\n        }\n\n        coder = coderNumber(intSize / 8, prefix === 'int');\n        break;\n\n      case 'bool':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderBoolean;\n        break;\n\n      case 'string':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderString;\n        break;\n\n      case 'bytes':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        if (part[3]) {\n          var size = parseInt(part[3]); // eslint-disable-line\n\n          if (size === 0 || size > 32) {\n            throw new Error('[ethjs-abi] while getting param coder for prefix bytes, invalid type ' + type + ', size ' + size + ' should be 0 or greater than 32');\n          }\n\n          coder = coderFixedBytes(size);\n        } else {\n          coder = coderDynamicBytes;\n        }\n\n        break;\n\n      case 'address':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderAddress;\n        break;\n\n      case '[]':\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderArray(coder, -1);\n        break;\n      // \"[0-9+]\"\n\n      default:\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        var defaultSize = parseInt(part[6]); // eslint-disable-line\n\n        coder = coderArray(coder, defaultSize);\n    }\n  }\n\n  if (!coder) {\n    throw new Error(invalidTypeErrorMessage);\n  }\n\n  return coder;\n}\n\nmodule.exports = {\n  BN: BN,\n  bnToBuffer: bnToBuffer,\n  isHexString: isHexString,\n  hexOrBuffer: hexOrBuffer,\n  hexlify: hexlify,\n  stripZeros: stripZeros,\n  keccak256: keccak256,\n  getKeys: getKeys,\n  numberToBN: numberToBN,\n  coderNumber: coderNumber,\n  uint256Coder: uint256Coder,\n  coderBoolean: coderBoolean,\n  coderFixedBytes: coderFixedBytes,\n  coderAddress: coderAddress,\n  coderDynamicBytes: coderDynamicBytes,\n  coderString: coderString,\n  coderArray: coderArray,\n  paramTypePart: paramTypePart,\n  getParamCoder: getParamCoder\n};","map":{"version":3,"sources":["/Users/vsiow/Documents/UCD/S2020/final-project-bar/bar-chat-app/client/node_modules/ethjs-abi/lib/utils/index.js"],"names":["BN","require","numberToBN","keccak256","keccak_256","stripZeros","aInput","a","first","length","toString","slice","bnToBuffer","bnInput","bn","hex","Buffer","isHexString","value","match","hexOrBuffer","valueInput","name","isBuffer","error","Error","reason","substring","hexlify","mod","modulo","getKeys","params","key","allowEmpty","result","Array","isArray","JSON","stringify","i","push","coderNumber","size","signed","encode","encodeNumber","toTwos","dividedToIntegerBy","split","String","maskn","fromTwos","toArrayLike","decode","decodeNumber","data","offset","junkLength","consumed","uint256Coder","coderBoolean","encodeBoolean","decodeBoolean","isZero","coderFixedBytes","encodeFixedBytes","fill","copy","decodeFixedBytes","coderAddress","encodeAddress","decodeAddress","encodeDynamicBytesHelper","dataLength","parseInt","Math","ceil","padding","concat","decodeDynamicBytesHelper","toNumber","coderDynamicBytes","encodeDynamicBytes","decodeDynamicBytes","dynamic","coderString","encodeString","decodeString","coderArray","coder","lengthInput","encodeArray","forEach","resultValue","decodeArray","offsetInput","decodeResult","loopResult","paramTypePart","RegExp","getParamCoder","typeInput","type","invalidTypeErrorMessage","part","prefix","intSize","defaultSize","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar keccak256 = require('js-sha3').keccak_256;\n\n// from ethereumjs-util\nfunction stripZeros(aInput) {\n  var a = aInput; // eslint-disable-line\n  var first = a[0]; // eslint-disable-line\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n}\n\nfunction bnToBuffer(bnInput) {\n  var bn = bnInput; // eslint-disable-line\n  var hex = bn.toString(16); // eslint-disable-line\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n  return stripZeros(new Buffer(hex, 'hex'));\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n  return true;\n}\n\nfunction hexOrBuffer(valueInput, name) {\n  var value = valueInput; // eslint-disable-line\n  if (!Buffer.isBuffer(value)) {\n    if (!isHexString(value)) {\n      var error = new Error(name ? '[ethjs-abi] invalid ' + name : '[ethjs-abi] invalid hex or buffer, must be a prefixed alphanumeric even length hex string');\n      error.reason = '[ethjs-abi] invalid hex string, hex must be prefixed and alphanumeric (e.g. 0x023..)';\n      error.value = value;\n      throw error;\n    }\n\n    value = value.substring(2);\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n    value = new Buffer(value, 'hex');\n  }\n\n  return value;\n}\n\nfunction hexlify(value) {\n  if (typeof value === 'number') {\n    return '0x' + bnToBuffer(new BN(value)).toString('hex');\n  } else if (value.mod || value.modulo) {\n    return '0x' + bnToBuffer(value).toString('hex');\n  } else {\n    // eslint-disable-line\n    return '0x' + hexOrBuffer(value).toString('hex');\n  }\n}\n\n// getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\nfunction getKeys(params, key, allowEmpty) {\n  var result = []; // eslint-disable-line\n\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-abi] while getting keys, invalid params value ' + JSON.stringify(params));\n  }\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('[ethjs-abi] while getKeys found invalid ABI data structure, type value not string');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction coderNumber(size, signed) {\n  return {\n    encode: function encodeNumber(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      if (typeof value === 'object' && value.toString && (value.toTwos || value.dividedToIntegerBy)) {\n        value = value.toString(10).split('.')[0];\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        value = String(value).split('.')[0];\n      }\n\n      value = numberToBN(value);\n      value = value.toTwos(size * 8).maskn(size * 8);\n      if (signed) {\n        value = value.fromTwos(size * 8).toTwos(256);\n      }\n      return value.toArrayLike(Buffer, 'be', 32);\n    },\n    decode: function decodeNumber(data, offset) {\n      var junkLength = 32 - size; // eslint-disable-line\n      var value = new BN(data.slice(offset + junkLength, offset + 32)); // eslint-disable-line\n      if (signed) {\n        value = value.fromTwos(size * 8);\n      } else {\n        value = value.maskn(size * 8);\n      }\n      return {\n        consumed: 32,\n        value: new BN(value.toString(10))\n      };\n    }\n  };\n}\nvar uint256Coder = coderNumber(32, false);\n\nvar coderBoolean = {\n  encode: function encodeBoolean(value) {\n    return uint256Coder.encode(value ? 1 : 0);\n  },\n  decode: function decodeBoolean(data, offset) {\n    var result = uint256Coder.decode(data, offset); // eslint-disable-line\n    return {\n      consumed: result.consumed,\n      value: !result.value.isZero()\n    };\n  }\n};\n\nfunction coderFixedBytes(length) {\n  return {\n    encode: function encodeFixedBytes(valueInput) {\n      var value = valueInput; // eslint-disable-line\n      value = hexOrBuffer(value);\n\n      if (value.length === 32) {\n        return value;\n      }\n\n      var result = new Buffer(32); // eslint-disable-line\n      result.fill(0);\n      value.copy(result);\n      return result;\n    },\n    decode: function decodeFixedBytes(data, offset) {\n      if (data.length < offset + 32) {\n        throw new Error('[ethjs-abi] while decoding fixed bytes, invalid bytes data length: ' + length);\n      }\n\n      return {\n        consumed: 32,\n        value: '0x' + data.slice(offset, offset + length).toString('hex')\n      };\n    }\n  };\n}\n\nvar coderAddress = {\n  encode: function encodeAddress(valueInput) {\n    var value = valueInput; // eslint-disable-line\n    var result = new Buffer(32); // eslint-disable-line\n    if (!isHexString(value, 20)) {\n      throw new Error('[ethjs-abi] while encoding address, invalid address value, not alphanumeric 20 byte hex string');\n    }\n    value = hexOrBuffer(value);\n    result.fill(0);\n    value.copy(result, 12);\n    return result;\n  },\n  decode: function decodeAddress(data, offset) {\n    if (data.length === 0) {\n      return {\n        consumed: 32,\n        value: '0x'\n      };\n    }\n    if (data.length < offset + 32) {\n      throw new Error('[ethjs-abi] while decoding address data, invalid address data, invalid byte length ' + data.length);\n    }\n    return {\n      consumed: 32,\n      value: '0x' + data.slice(offset + 12, offset + 32).toString('hex')\n    };\n  }\n};\n\nfunction encodeDynamicBytesHelper(value) {\n  var dataLength = parseInt(32 * Math.ceil(value.length / 32)); // eslint-disable-line\n  var padding = new Buffer(dataLength - value.length); // eslint-disable-line\n  padding.fill(0);\n\n  return Buffer.concat([uint256Coder.encode(value.length), value, padding]);\n}\n\nfunction decodeDynamicBytesHelper(data, offset) {\n  if (data.length < offset + 32) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32));\n  }\n\n  var length = uint256Coder.decode(data, offset).value; // eslint-disable-line\n  length = length.toNumber();\n  if (data.length < offset + 32 + length) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32 + length));\n  }\n\n  return {\n    consumed: parseInt(32 + 32 * Math.ceil(length / 32), 10),\n    value: data.slice(offset + 32, offset + 32 + length)\n  };\n}\n\nvar coderDynamicBytes = {\n  encode: function encodeDynamicBytes(value) {\n    return encodeDynamicBytesHelper(hexOrBuffer(value));\n  },\n  decode: function decodeDynamicBytes(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n    result.value = '0x' + result.value.toString('hex');\n    return result;\n  },\n  dynamic: true\n};\n\nvar coderString = {\n  encode: function encodeString(value) {\n    return encodeDynamicBytesHelper(new Buffer(value, 'utf8'));\n  },\n  decode: function decodeString(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n    result.value = result.value.toString('utf8');\n    return result;\n  },\n  dynamic: true\n};\n\nfunction coderArray(coder, lengthInput) {\n  return {\n    encode: function encodeArray(value) {\n      var result = new Buffer(0); // eslint-disable-line\n      var length = lengthInput; // eslint-disable-line\n\n      if (!Array.isArray(value)) {\n        throw new Error('[ethjs-abi] while encoding array, invalid array data, not type Object (Array)');\n      }\n\n      if (length === -1) {\n        length = value.length;\n        result = uint256Coder.encode(length);\n      }\n\n      if (length !== value.length) {\n        throw new Error('[ethjs-abi] while encoding array, size mismatch array length ' + length + ' does not equal ' + value.length);\n      }\n\n      value.forEach(function (resultValue) {\n        result = Buffer.concat([result, coder.encode(resultValue)]);\n      });\n\n      return result;\n    },\n    decode: function decodeArray(data, offsetInput) {\n      var length = lengthInput; // eslint-disable-line\n      var offset = offsetInput; // eslint-disable-line\n      // @TODO:\n      // if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n      var consumed = 0; // eslint-disable-line\n      var decodeResult; // eslint-disable-line\n\n      if (length === -1) {\n        decodeResult = uint256Coder.decode(data, offset);\n        length = decodeResult.value.toNumber();\n        consumed += decodeResult.consumed;\n        offset += decodeResult.consumed;\n      }\n\n      var value = []; // eslint-disable-line\n\n      for (var i = 0; i < length; i++) {\n        // eslint-disable-line\n        var loopResult = coder.decode(data, offset);\n        consumed += loopResult.consumed;\n        offset += loopResult.consumed;\n        value.push(loopResult.value);\n      }\n\n      return {\n        consumed: consumed,\n        value: value\n      };\n    },\n    dynamic: lengthInput === -1\n  };\n}\n\n// Break the type up into [staticType][staticArray]*[dynamicArray]? | [dynamicType] and\n// build the coder up from its parts\nvar paramTypePart = new RegExp(/^((u?int|bytes)([0-9]*)|(address|bool|string)|(\\[([0-9]*)\\]))/);\n\nfunction getParamCoder(typeInput) {\n  var type = typeInput; // eslint-disable-line\n  var coder = null; // eslint-disable-line\n  var invalidTypeErrorMessage = '[ethjs-abi] while getting param coder (getParamCoder) type value ' + JSON.stringify(type) + ' is either invalid or unsupported by ethjs-abi.';\n\n  while (type) {\n    var part = type.match(paramTypePart); // eslint-disable-line\n    if (!part) {\n      throw new Error(invalidTypeErrorMessage);\n    }\n    type = type.substring(part[0].length);\n\n    var prefix = part[2] || part[4] || part[5]; // eslint-disable-line\n    switch (prefix) {\n      case 'int':case 'uint':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        var intSize = parseInt(part[3] || 256); // eslint-disable-line\n        if (intSize === 0 || intSize > 256 || intSize % 8 !== 0) {\n          throw new Error('[ethjs-abi] while getting param coder for type ' + type + ', invalid ' + prefix + '<N> width: ' + type);\n        }\n\n        coder = coderNumber(intSize / 8, prefix === 'int');\n        break;\n\n      case 'bool':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderBoolean;\n        break;\n\n      case 'string':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderString;\n        break;\n\n      case 'bytes':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        if (part[3]) {\n          var size = parseInt(part[3]); // eslint-disable-line\n          if (size === 0 || size > 32) {\n            throw new Error('[ethjs-abi] while getting param coder for prefix bytes, invalid type ' + type + ', size ' + size + ' should be 0 or greater than 32');\n          }\n          coder = coderFixedBytes(size);\n        } else {\n          coder = coderDynamicBytes;\n        }\n        break;\n\n      case 'address':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderAddress;\n        break;\n\n      case '[]':\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderArray(coder, -1);\n        break;\n\n      // \"[0-9+]\"\n      default:\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        var defaultSize = parseInt(part[6]); // eslint-disable-line\n        coder = coderArray(coder, defaultSize);\n    }\n  }\n\n  if (!coder) {\n    throw new Error(invalidTypeErrorMessage);\n  }\n  return coder;\n}\n\nmodule.exports = {\n  BN: BN,\n  bnToBuffer: bnToBuffer,\n  isHexString: isHexString,\n  hexOrBuffer: hexOrBuffer,\n  hexlify: hexlify,\n  stripZeros: stripZeros,\n\n  keccak256: keccak256,\n\n  getKeys: getKeys,\n  numberToBN: numberToBN,\n  coderNumber: coderNumber,\n  uint256Coder: uint256Coder,\n  coderBoolean: coderBoolean,\n  coderFixedBytes: coderFixedBytes,\n  coderAddress: coderAddress,\n  coderDynamicBytes: coderDynamicBytes,\n  coderString: coderString,\n  coderArray: coderArray,\n  paramTypePart: paramTypePart,\n  getParamCoder: getParamCoder\n};"]},"metadata":{},"sourceType":"script"}